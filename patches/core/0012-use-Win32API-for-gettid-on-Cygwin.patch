From 04ba0f1b636557ae4d7d8eb58b544b5c0bccd557 Mon Sep 17 00:00:00 2001
From: Ookiineko <chiisaineko@protonmail.com>
Date: Thu, 18 Aug 2022 17:27:08 +0800
Subject: [PATCH 14/17] use Win32API for gettid() on Cygwin

- we don't have pthread_threadid_np either,
  and at least this is better than the
  fallback getpid()

Signed-off-by: Ookiineko <chiisaineko@protonmail.com>
---
 libcutils/threads.cpp      | 18 +++++++++++-------
 1 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/libcutils/threads.cpp b/libcutils/threads.cpp
index a15ff6a..048f3cb 100644
--- a/libcutils/threads.cpp
+++ b/libcutils/threads.cpp
@@ -16,13 +16,15 @@
 
 #include <cutils/threads.h>
 
-#if defined(__APPLE__)
+#if 0
 #include <stdint.h>
-#elif defined(__linux__)
+#endif
+#if 1
 #include <syscall.h>
 #include <unistd.h>
-#elif defined(_WIN32)
-#include <windows.h>
+#endif
+#if 1
+#include <w32api/processthreadsapi.h>
 #endif
 
 #if defined(__BIONIC__) || defined(__GLIBC__) && __GLIBC_MINOR__ >= 31
@@ -30,14 +32,16 @@
 // No definition needed for Glibc >= 2.32 because it exposes its own copy.
 #else
 pid_t gettid() {
-#if defined(__APPLE__)
+#if 0
   uint64_t tid;
   pthread_threadid_np(NULL, &tid);
   return tid;
-#elif defined(__linux__)
+#elif 0
   return syscall(__NR_gettid);
-#elif defined(_WIN32)
+#elif 1
   return GetCurrentThreadId();
+#else
+#error No gettid() impl on this OS
 #endif
 }
 #endif
 
-- 
2.37.2

